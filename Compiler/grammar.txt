^ Bod -> $B4 | $B1 | $ID @
^ Bol -> Bod | Bod > Bod | Bod >= Bod | Bod < Bod | Bod <= Bod | Bod == Bod | Bod != Bod | ! Bod | Bod && Bod | Bod || Bod | ( Bod ) @
^ Tup -> Exp , Tup | Exp @
^ Lst -> { Tup } @
^ As1 -> $ID = Exp | $ID @
^ Poe -> Bod | Bod ++ | Bod -- @
^ Mue -> Poe | Mue * Poe | Mue / Poe | Mue % Poe @
^ Typ -> $INT | $CHAR @
^ Exp -> Mue | Exp + Mue | Exp - Mue @
^ As2 -> $ID [ $B4 ] | $ID [ ] = Lst | $ID [ $B4 ] = Lst | $ID [ ] = $STR | $ID [ $B4 ] = $STR @
^ Ass -> As1 | As2 @
^ Dec -> Typ Ass ; @
^ Ids -> $ID | $ID , Ids @
^ Prt -> $PRINTF ( $STR , Ids ) ; @
^ Sta -> As1 ; | Exp ; | Ifb | Fob | Whb | Ret | Prt | ; @
^ Blk -> Dec | Sta @
^ Bkl -> Blk | Bkl Blk @
^ Eif -> $ELSE $IF ( Bol ) { Sta } | $ELSE $IF ( Bol ) { Sta } Eif @
^ Ifb -> $IF ( Bol ) { Sta } | $IF ( Bol ) { Sta } $ELSE { Sta } | $IF ( Bol ) { Sta } Eif $ELSE { Sta } | $IF ( Bol ) { Sta } Eif @
^ Stl -> Sta | $CONTINUE ; | $BREAK ; @
^ Fob -> $FOR ( As1 ; Bol ; Exp ) { Stl } @
^ Whb -> $WHILE ( Bol ) { Stl } @
^ Ret -> $RETURN Exp ; @
^ Vls -> Typ $ID | Typ $ID , Vls @
^ S -> Typ $MAIN ( Vls ) { Bkl } @