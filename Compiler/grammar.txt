^ Pre -> $B4 | $B1 | $ID @
^ Poe -> Pre | Poe ++ | Poe -- @
^ Mue -> Poe | Mue * Poe | Mue / Poe | Mue % Poe @
^ Ade -> Mue | Ade + Mue | Ade - Mue @
^ Ree -> Pre | Ree < Pre | Ree > Pre | Ree <= Pre | Ree >= Pre @
^ Eqe -> Ree | Eqe == Ree | Eqe != Ree @
^ Ane -> Eqe | Ane && Eqe @
^ Ore -> Ane | Ore || Ane @
^ Dec -> Typ $ID ; | Typ $ID Arr ; @
^ Typ -> $INT | $CHAR @
^ Arr -> [ Pre ] | [ Pre ] [ Pre ] @
^ Ras -> Ra1 | Ra2 @
^ Ra1 -> Idn = Ade @
^ Ra2 -> Idn Arr = Ade | Idn = Idn Arr @
^ Idn -> $ID @
^ Sta -> Ras ; | Poe ; | Ifb | Fob | Whb | Ret | ; | Re @
^ Des -> Dec | Des Dec @
^ Blk -> Sta | Blk Sta @
^ Ifb -> $IF ( Ore ) { Blk } | $IF ( Ore ) { Blk } $ELSE { Blk } @
^ Fob -> $FOR ( Ra1 ; Ore ; Ade ) { Blk } @
^ Whb -> $WHILE ( Ore ) { Blk } @
^ Re -> $RETURN Ade ; @
^ Ids -> Pre | Pre , Ids @
^ Ret -> $PRINTF ( $STR , Ids ) ; @
^ S -> Typ $MAIN ( ) { Des Blk } @